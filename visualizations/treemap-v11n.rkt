#lang racket

(require sgl sgl/gl "../common.ss" "helpers/def-painter.ss")
(provide visualization)
(struct treemap-utterance utterance (total-width total-height))
(define visualization (letrec ((v147 (lambda (a391 a392 a393 a396 a397 a398 a399) (letrec ((v149 (lambda (a182 a183 a184 a210 a247 a249 a336 a390) (letrec ((v179 a182) (v209 a210) (v180 a183) (v181 a184) (v201 a390) (v248 a249) (v262 ((node-text-func v179) v179)) (v246 a247) (v335 a336) (v265 (if (or (closed? v179 v201) (null? (node-args v179))) null (letrec ((v287 (lambda (a316 a339) (letrec ((v343 (+ 1 (length (node-args v179)))) (v324 (/ (if (eq? v248 (quote horizontal)) v209 v246) v343)) (v315 a316) (v338 a339)) (if (eq? v248 (quote horizontal)) (letrec ((v696 (* 9/10 v246))) (v149 v315 (+ v180 (* v338 v324)) (center v181 v246 v696 0 +inf.0) v324 v696 (quote vertical) (+ 1 v335) v201)) (letrec ((v688 (* 9/10 v209))) (v149 v315 (center v180 v209 v688 0 +inf.0) (+ v181 (* v338 v324)) v688 v324 (quote horizontal) (+ 1 v335) v201))))))) (map v287 (node-args v179) (map (curry + 1) (build-list (length (node-args v179)) identity))))))) (treemap-utterance v179 v180 v181 (or (and (or (eq? v248 (quote vertical)) (closed? v179 v201) (null? (node-args v179))) v209) (/ v209 (+ 1 (length (node-args v179))))) (or (and (or (eq? v248 (quote horizontal)) (closed? v179 v201) (null? (node-args v179))) v246) (/ v246 (+ 1 (length (node-args v179))))) (box-width v262) (box-height v262) v265 (get-color v179 v201) v209 v246)))) (v151 a391) (v153 a392) (v155 a393) (v157 -) (v164 a397) (v166 -) (v168 -) (v171 a399)) (v149 v151 v153 v155 (whole-tree-w v171) (whole-tree-h v171) (quote horizontal) v164 v171)))) (v436 (lambda (a455 a487 a488 a637) (letrec ((v439 (lambda (a451) (letrec ((v450 a451) (v467 a488) (v484 a487)) (if (or (and (= (utterance-w v450) (treemap-utterance-total-width v450)) (< v467 (+ (utterance-y v450) (utterance-h v450)))) (and (= (utterance-h v450) (treemap-utterance-total-height v450)) (< v484 (+ (utterance-x v450) (utterance-w v450)))) (null? (utterance-args v450))) v450 (letrec ((v506 (lambda (a522) (letrec ((v521 a522)) (if (and (>= v467 (utterance-y v521)) (< v467 (+ (utterance-y v521) (treemap-utterance-total-height v521))) (>= v484 (utterance-x v521)) (< v484 (+ (utterance-x v521) (treemap-utterance-total-width v521)))) (v439 v521) #f))))) (ormap v506 (utterance-args v450))))))) (v453 a455) (v636 a637)) (or (v439 v453) v453 v636)))) (v560 (lambda (a567 a643) (letrec ((v566 a567) (v642 a643)) (cond ((eq? v566 (quote up)) (set-whole-tree-zoom! Selected-tree (* (/ 1.2) (whole-tree-zoom Selected-tree)))) ((eq? v566 (quote down)) (set-whole-tree-zoom! Selected-tree (* 1.2 (whole-tree-zoom Selected-tree)))) ((eq? v566 (quote left)) (set-whole-tree-offset-y! Selected-tree (+ SCROLLDIST (whole-tree-offset-y Selected-tree)))) ((eq? v566 (quote right)) (set-whole-tree-offset-y! Selected-tree (+ (- SCROLLDIST) (whole-tree-offset-y Selected-tree))))))))) (v11n (letrec ((v9 (lambda (a134 a135 a136 a137 a138 a139 a140 a141 a143 a144 a145) (letrec ((v19 a144) (v29 a141) (v37 a135) (v38 a136) (v58 a137) (v69 a138)) (begin (letrec ((v39 (treemap-utterance-total-width a143)) (v40 (treemap-utterance-total-height a143))) (draw-rectangle (if (eq? Selected-tree v19) (cdr v29) (map (curry / 3) (cdr v29))) v37 v38 v39 v40)) (letrec ((v52 a139) (v64 a140)) (if (and (< (/ (- v52 PADDING) (whole-tree-zoom v19)) v58) (< (/ v64 (whole-tree-zoom v19)) v69)) (letrec ((v73 a134) (v76 a145)) (draw-text v73 (v76 v37 v58 (- v52 PADDING) (- (whole-tree-offset-x v19)) (whole-tree-w v19)) (+ v64 -3 (v76 v38 v69 v64 (- (whole-tree-offset-y v19)) (whole-tree-h v19))) (car v29) v19)) null)))))) (v123 (lambda (a129 a130 a131 a132 a133) #f))) (def-painter #:drawer v9 #:invisible? v123)) v147 v436 v560)))
